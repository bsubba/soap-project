<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="23026b43-f180-4f2d-8aec-8dfed012ea73" created="2.7.0" activeEnvironment="Default environment" name="Exampledotcom" resourceRoot="" updated="2.7.0 2019-05-30T13:25:24Z" encryptionMode="Not encrypted" xmlns:con="http://eviware.com/soapui/config">
  <con:settings/>
  <con:interface xsi:type="con:RestService" id="bd77a370-04db-4dad-8be9-3c05c8ef9e11" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://example.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <con:settings/>
    <con:definitionCache type="TEXT" rootPart=""/>
    <con:endpoints>
      <con:endpoint>https://example.com</con:endpoint>
    </con:endpoints>
    <con:resource name="" path="" id="2d6ba1b4-0b7d-4414-861c-12c0f53137fa">
      <con:settings/>
      <con:parameters/>
      <con:method name="" id="2f020191-c68b-4d02-93f2-b7e59a85bcbe" method="GET">
        <con:settings/>
        <con:parameters/>
        <con:representation type="RESPONSE">
          <con:mediaType>text/html; charset=UTF-8</con:mediaType>
          <con:status>200</con:status>
          <con:params/>
          <con:element>html</con:element>
        </con:representation>
        <con:request name="Request 1" id="26ea7435-0117-43b0-86bf-13d14233bbf8" mediaType="application/json">
          <con:settings/>
          <con:endpoint>https://example.com</con:endpoint>
          <con:credentials>
            <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
            <con:authType>No Authorization</con:authType>
          </con:credentials>
          <con:parameters/>
        </con:request>
      </con:method>
    </con:resource>
  </con:interface>
  <con:testSuite id="d206f617-6c26-463c-8fc1-d969244bfa1f" name="https://example.com TestSuite">
    <con:settings/>
    <con:savedRecentRuns>1</con:savedRecentRuns>
    <con:runType>SEQUENTIAL</con:runType>
    <con:testCase id="0a3a6953-93ba-4fe5-8da6-8c6c9d98fa66" discardOkResults="false" failOnError="true" failTestCaseOnErrors="true" keepSession="false" name="https://example.com TestCase 1" searchProperties="true" timeout="0">
      <con:settings/>
      <con:testStep type="delay" name="Delay" id="eec0214e-1560-40d5-9532-e34eb1b6cf68">
        <con:settings/>
        <con:config>
          <delay>30000</delay>
        </con:config>
      </con:testStep>
      <con:testStep type="restrequest" name="Request 1" id="6eb3c6d2-37ed-4d89-817e-bea9eeb3b118">
        <con:settings/>
        <con:config service="https://example.com" resourcePath="" methodName="" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
          <con:restRequest name="Request 1" id="26ea7435-0117-43b0-86bf-13d14233bbf8" mediaType="application/json">
            <con:settings>
              <con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting>
            </con:settings>
            <con:endpoint>https://example.com</con:endpoint>
            <con:request/>
            <con:originalUri>https://example.com/</con:originalUri>
            <con:assertion type="Valid HTTP Status Codes" id="e876f5eb-9ebe-4168-ac34-133adaa07465" name="Valid HTTP Status Codes">
              <con:settings/>
              <con:configuration>
                <codes>200</codes>
              </con:configuration>
            </con:assertion>
            <con:assertion type="XPath Match" id="a5258a6c-c590-4992-932d-927d52fc4f8b" name="Match content of [title]">
              <con:configuration>
                <path>//html[1]/head[1]/title[1]/text()</path>
                <content>Example Domain</content>
                <allowWildcards>false</allowWildcards>
                <ignoreNamspaceDifferences>false</ignoreNamspaceDifferences>
                <ignoreComments>false</ignoreComments>
              </con:configuration>
            </con:assertion>
            <con:credentials>
              <con:selectedAuthProfile>No Authorization</con:selectedAuthProfile>
              <con:authType>No Authorization</con:authType>
            </con:credentials>
            <con:jmsConfig JMSDeliveryMode="PERSISTENT"/>
            <con:parameters/>
          </con:restRequest>
        </con:config>
      </con:testStep>
      <con:properties/>
      <con:reportParameters/>
    </con:testCase>
    <con:properties/>
    <con:reportParameters/>
  </con:testSuite>
  <con:savedRecentRuns>1</con:savedRecentRuns>
  <con:properties/>
  <con:wssContainer/>
  <con:databaseConnectionContainer/>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer/>
  <con:oAuth1ProfileContainer/>
  <con:reporting>
    <con:xmlTemplates/>
    <con:parameters/>
  </con:reporting>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to SoapUI Pro tests

// If hardcoding the token, uncomment and change line 5
// def token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// def token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// def headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:authRepository/>
  <con:tags/>
</con:soapui-project>
